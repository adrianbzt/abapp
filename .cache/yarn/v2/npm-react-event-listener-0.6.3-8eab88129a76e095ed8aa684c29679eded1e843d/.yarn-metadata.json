{
  "manifest": {
    "name": "react-event-listener",
    "version": "0.6.3",
    "description": "A React component that allow to bind events on the global scope",
    "main": "dist/react-event-listener.cjs.js",
    "scripts": {
      "build": "rimraf dist && rollup -c && rimraf dist/react-event-listener.esm.js",
      "lint": "eslint . && echo \"eslint: no lint errors\"",
      "size": "yarn build && size-limit",
      "test:unit": "NODE_ENV=test mocha",
      "test:watch": "NODE_ENV=test mocha -w",
      "test": "yarn lint && yarn test:unit && yarn size",
      "prettier": "find . -name \"*.js\" | grep -v -f .eslintignore | xargs prettier --write",
      "version": "yarn build && pkgfiles"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/oliviertassinari/react-event-listener.git"
    },
    "homepage": "https://github.com/oliviertassinari/react-event-listener",
    "keywords": [
      "react",
      "event",
      "listener",
      "binding"
    ],
    "author": {
      "name": "olivier.tassinari@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/oliviertassinari/react-event-listener/issues"
    },
    "devDependencies": {
      "@babel/core": "7.0.0-rc.1",
      "@babel/plugin-proposal-class-properties": "^7.0.0-rc.1",
      "@babel/plugin-proposal-object-rest-spread": "^7.0.0-rc.1",
      "@babel/plugin-transform-modules-commonjs": "7.0.0-rc.1",
      "@babel/plugin-transform-runtime": "7.0.0-rc.1",
      "@babel/preset-env": "7.0.0-rc.1",
      "@babel/preset-react": "7.0.0-rc.1",
      "@babel/register": "7.0.0-rc.1",
      "babel-core": "^7.0.0-bridge.0",
      "babel-eslint": "^8.0.1",
      "babel-plugin-transform-dev-warning": "^0.1.0",
      "babel-plugin-transform-react-remove-prop-types": "^0.4.9",
      "chai": "^4.1.2",
      "enzyme": "^3.1.0",
      "enzyme-adapter-react-16": "^1.0.1",
      "eslint": "^5.0.0",
      "eslint-config-airbnb": "^17.0.0",
      "eslint-plugin-babel": "^5.0.0",
      "eslint-plugin-import": "^2.7.0",
      "eslint-plugin-jsx-a11y": "^6.0.0",
      "eslint-plugin-mocha": "^5.0.0",
      "eslint-plugin-prettier": "^2.3.1",
      "eslint-plugin-react": "^7.4.0",
      "jsdom": "^12.0.0",
      "mocha": "^5.0.0",
      "pkgfiles": "^2.3.2",
      "prettier": "^1.7.4",
      "react": "^16.0.0",
      "react-dom": "^16.0.0",
      "react-test-renderer": "^16.0.0",
      "rimraf": "^2.6.2",
      "rollup": "^0.64.1",
      "rollup-plugin-babel": "^4.0.0-beta.4",
      "rollup-plugin-commonjs": "^9.1.3",
      "rollup-plugin-node-resolve": "^3.3.0",
      "rollup-plugin-replace": "^2.0.0",
      "rollup-plugin-size-snapshot": "^0.4.1",
      "sinon": "^6.1.2",
      "size-limit": "^0.19.2"
    },
    "dependencies": {
      "@babel/runtime": "7.0.0-rc.1",
      "prop-types": "^15.6.0",
      "warning": "^4.0.1"
    },
    "peerDependencies": {
      "react": "^16.3.0"
    },
    "_registry": "npm",
    "_loc": "/project/.cache/yarn/v2/npm-react-event-listener-0.6.3-8eab88129a76e095ed8aa684c29679eded1e843d/package.json",
    "readmeFilename": "README.md",
    "readme": "# react-event-listener\n\n> A React component for binding events on the global scope.\n\n[![npm version](https://img.shields.io/npm/v/react-event-listener.svg?style=flat-square)](https://www.npmjs.com/package/react-event-listener)\n[![npm downloads](https://img.shields.io/npm/dm/react-event-listener.svg?style=flat-square)](https://www.npmjs.com/package/react-event-listener)\n[![Build Status](https://travis-ci.org/oliviertassinari/react-event-listener.svg?branch=master)](https://travis-ci.org/oliviertassinari/react-event-listener)\n\n[![Dependencies](https://img.shields.io/david/oliviertassinari/react-event-listener.svg?style=flat-square)](https://david-dm.org/oliviertassinari/react-event-listener)\n[![DevDependencies](https://img.shields.io/david/dev/oliviertassinari/react-event-listener.svg?style=flat-square)](https://david-dm.org/oliviertassinari/react-event-listener#info=devDependencies&view=list)\n\n## Installation\n\n```sh\nnpm install react-event-listener\n```\n\n## The problem solved\n\nThis module provides a **declarative way** to bind events to a global `EventTarget`.\nIt's using the React lifecycle to bind and unbind at the right time.\n\n## Usage\n\n```js\nimport React, {Component} from 'react';\nimport EventListener, {withOptions} from 'react-event-listener';\n\nclass MyComponent extends Component {\n  handleResize = () => {\n    console.log('resize');\n  };\n\n  handleScroll = () => {\n    console.log('scroll');\n  };\n\n  handleMouseMove = () => {\n    console.log('mousemove');\n  };\n\n  render() {\n    return (\n      <div>\n        <EventListener\n          target=\"window\"\n          onResize={this.handleResize}\n          onScroll={withOptions(this.handleScroll, {passive: true, capture: false})}\n        />\n        <EventListener target={document} onMouseMoveCapture={this.handleMouseMove} />\n      </div>\n    );\n  }\n}\n```\n\n### Note on server-side rendering\n\nWhen doing server side rendering, `document` and `window` aren't available.\nYou can use a string as a `target`, or check that they exist before rendering\nthe component.\n\n### Note on performance\n\nYou should avoid passing inline functions for listeners, because this creates a new `Function` instance on every\nrender, defeating `EventListener`'s `shouldComponentUpdate`, and triggering an update cycle where it removes its old\nlisteners and adds its new listeners (so that it can stay up-to-date with the props you passed in).\n\n### Note on testing\n\nIn [this](https://github.com/facebook/react/issues/5043) issue from React, `TestUtils.Simulate.` methods won't bubble up to `window` or `document`. As a result, you must use [`document.dispatchEvent`](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent) or simulate event using [native DOM api](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click).\n\nSee our [test cases](https://github.com/oliviertassinari/react-event-listener/blob/master/src/index.spec.js) for more information.\n\n## Contributing\n\nNote: you need to have Flow 0.23.0 or greater to be installed.\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new Pull Request\n\n## Collaborators\n\n - Andy Edwards ([jedwards1211](https://github.com/jedwards1211))\n\n## License\n\nMIT\n",
    "licenseText": "The MIT License (MIT)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/react-event-listener/-/react-event-listener-0.6.3.tgz#8eab88129a76e095ed8aa684c29679eded1e843d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/react-event-listener/-/react-event-listener-0.6.3.tgz",
    "hash": "8eab88129a76e095ed8aa684c29679eded1e843d",
    "registry": "npm",
    "packageName": "react-event-listener"
  },
  "registry": "npm",
  "hash": "8eab88129a76e095ed8aa684c29679eded1e843d"
}